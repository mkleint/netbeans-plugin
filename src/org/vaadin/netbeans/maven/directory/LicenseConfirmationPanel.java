/*
 * Copyright 2000-2013 Vaadin Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

package org.vaadin.netbeans.maven.directory;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

/**
 * @author denis
 */
class LicenseConfirmationPanel extends JPanel {

    LicenseConfirmationPanel( String licenseText, final JButton button ) {
        initComponents();

        myLicense.setText(licenseText);

        myConfirmation.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed( ActionEvent e ) {
                button.setEnabled(myConfirmation.isSelected());
            }
        });
        setCaret();
    }

    private void setCaret() {
        SwingUtilities.invokeLater(new Runnable() {

            @Override
            public void run() {
                if (SwingUtilities
                        .getWindowAncestor(LicenseConfirmationPanel.this) == null)
                {
                    setCaret();
                }
                else {
                    myLicense.requestFocusInWindow();
                    myLicense.setCaretPosition(0);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        confirmLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        myLicense = new javax.swing.JTextArea();
        myConfirmation = new javax.swing.JCheckBox();

        org.openide.awt.Mnemonics.setLocalizedText(confirmLbl, org.openide.util.NbBundle.getMessage(LicenseConfirmationPanel.class, "LBL_ConfirmationInfo")); // NOI18N

        myLicense.setEditable(false);
        myLicense.setColumns(20);
        myLicense.setLineWrap(true);
        myLicense.setRows(5);
        jScrollPane1.setViewportView(myLicense);
        myLicense.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(LicenseConfirmationPanel.class, "ACSN_LicenseText")); // NOI18N
        myLicense.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(LicenseConfirmationPanel.class, "ACSD_LicenseText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(myConfirmation, org.openide.util.NbBundle.getMessage(LicenseConfirmationPanel.class, "LBL_Confirmation")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(myConfirmation)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(confirmLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 681, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(confirmLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(myConfirmation)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        confirmLbl.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(LicenseConfirmationPanel.class, "ACSN_ConfirmationInfo")); // NOI18N
        confirmLbl.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(LicenseConfirmationPanel.class, "ACSD_ConfirmationInfo")); // NOI18N
        myConfirmation.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(LicenseConfirmationPanel.class, "ACSN_Confirmation")); // NOI18N
        myConfirmation.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(LicenseConfirmationPanel.class, "ACSD_Confirm")); // NOI18N
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel confirmLbl;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox myConfirmation;
    private javax.swing.JTextArea myLicense;
    // End of variables declaration//GEN-END:variables
}
