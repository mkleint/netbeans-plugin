/*
 * Copyright 2000-2013 Vaadin Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package org.vaadin.netbeans.maven.directory;

import java.util.Date;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

import org.openide.util.NbBundle;
import org.vaadin.netbeans.maven.editor.completion.AbstractAddOn.Maturity;

/**
 * @author denis
 */
public class SearchPanel extends JPanel {

    enum AnyMaturity {
        ANY;

        @Override
        public String toString() {
            return NbBundle.getMessage(SearchPanel.class, "ITEM_AnyMaturity"); // NOI18N
        }
    }

    enum LicenseType {
        ALL("ITEM_LicenseAll"), // NOI18N
        FREE("ITEM_Free"), // NOI18N
        COMERCIAL("ITEM_Commercial");// NOI18N

        LicenseType( String key ) {
            myKey = key;
        }

        @Override
        public String toString() {
            return NbBundle.getMessage(SearchPanel.class, myKey);
        }

        private String myKey;
    }

    enum TextSearchFields {
        ALL("ITEM_FieldsAll"), // NOI18N
        NAME("ITEM_NameField"), // NOI18N
        DESCRIPTION("ITEM_DescrField");// NOI18N

        TextSearchFields( String key ) {
            myKey = key;
        }

        @Override
        public String toString() {
            return NbBundle.getMessage(SearchPanel.class, myKey);
        }

        private String myKey;
    }

    public SearchPanel() {
        initComponents();

        myMaturity.setModel(new DefaultComboBoxModel<>(getMaturities()));
        myLicenseType
                .setModel(new DefaultComboBoxModel<>(LicenseType.values()));
        myFields.setModel(new DefaultComboBoxModel<>(TextSearchFields.values()));

    }

    public void updateTable() {
        // TODO Auto-generated method stub

    }

    private Object[] getMaturities() {
        Maturity[] values = Maturity.values();
        Object[] result = new Object[values.length + 1];
        result[0] = AnyMaturity.ANY;
        //System.arraycopy(values, 0, result, 1, values.length);
        int i = 1;
        for (Maturity maturity : values) {
            result[i] =
                    maturity.toString().charAt(0)
                            + maturity.toString().substring(1).toLowerCase();
            i++;
        }
        return result;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        maturity = new javax.swing.JLabel();
        myMaturity = new javax.swing.JComboBox<Object>();
        license = new javax.swing.JLabel();
        myLicenseType = new javax.swing.JComboBox<LicenseType>();
        search = new javax.swing.JLabel();
        mySearch = new javax.swing.JTextField();
        myFields = new javax.swing.JComboBox<TextSearchFields>();
        splitPanel = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        myAddons = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        myDocPane = new javax.swing.JEditorPane();

        maturity.setLabelFor(myMaturity);
        org.openide.awt.Mnemonics.setLocalizedText(maturity,
                org.openide.util.NbBundle.getMessage(SearchPanel.class,
                        "LBL_Maturity")); // NOI18N

        license.setLabelFor(myLicenseType);
        org.openide.awt.Mnemonics.setLocalizedText(license,
                org.openide.util.NbBundle.getMessage(SearchPanel.class,
                        "LBL_License")); // NOI18N

        search.setLabelFor(mySearch);
        org.openide.awt.Mnemonics.setLocalizedText(search,
                org.openide.util.NbBundle.getMessage(SearchPanel.class,
                        "LBL_SearchText")); // NOI18N

        splitPanel.setDividerLocation(250);

        myAddons.setModel(new AddonsModel());
        jScrollPane1.setViewportView(myAddons);

        splitPanel.setLeftComponent(jScrollPane1);

        myDocPane.setContentType("text/html"); // NOI18N
        jScrollPane2.setViewportView(myDocPane);

        splitPanel.setRightComponent(jScrollPane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(
                        layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(
                                        layout.createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(
                                                        splitPanel,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        642, Short.MAX_VALUE)
                                                .addGroup(
                                                        layout.createSequentialGroup()
                                                                .addGroup(
                                                                        layout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(
                                                                                        search)
                                                                                .addComponent(
                                                                                        maturity))
                                                                .addPreferredGap(
                                                                        javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addGroup(
                                                                        layout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addGroup(
                                                                                        layout.createSequentialGroup()
                                                                                                .addComponent(
                                                                                                        myMaturity,
                                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                        189,
                                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                .addPreferredGap(
                                                                                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                        Short.MAX_VALUE)
                                                                                                .addComponent(
                                                                                                        license))
                                                                                .addComponent(
                                                                                        mySearch))
                                                                .addPreferredGap(
                                                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(
                                                                        layout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING,
                                                                                false)
                                                                                .addComponent(
                                                                                        myFields,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        205,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addComponent(
                                                                                        myLicenseType,
                                                                                        0,
                                                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                        Short.MAX_VALUE))))
                                .addContainerGap()));
        layout.setVerticalGroup(layout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(
                        layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(
                                        layout.createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(maturity)
                                                .addComponent(
                                                        myMaturity,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(
                                                        myLicenseType,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(license))
                                .addPreferredGap(
                                        javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(
                                        layout.createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(
                                                        mySearch,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(search)
                                                .addComponent(
                                                        myFields,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(
                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(splitPanel,
                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                        370, Short.MAX_VALUE).addContainerGap()));
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JScrollPane jScrollPane2;

    private javax.swing.JLabel license;

    private javax.swing.JLabel maturity;

    private javax.swing.JTable myAddons;

    private javax.swing.JEditorPane myDocPane;

    private javax.swing.JComboBox<TextSearchFields> myFields;

    private javax.swing.JComboBox<LicenseType> myLicenseType;

    private javax.swing.JComboBox<Object> myMaturity;

    private javax.swing.JTextField mySearch;

    private javax.swing.JLabel search;

    private javax.swing.JSplitPane splitPanel;

    // End of variables declaration//GEN-END:variables

    private static class AddonsModel extends DefaultTableModel {

        AddonsModel() {
            super(new Object[][] {}, new String[] { "Title 1", "Title 2",
                    "Title 3" });
        }

        @Override
        public boolean isCellEditable( int row, int column ) {
            return false;
        }

        @Override
        public Class<?> getColumnClass( int columnIndex ) {
            if (columnIndex == 0) {
                return String.class;
            }
            else if (columnIndex == 1) {
                return Double.class;
            }
            else {
                return Date.class;
            }
        }
    }

}
